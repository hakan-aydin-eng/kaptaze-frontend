# KAPTAZEAPPV5 - Nginx Configuration
# .com.tr domain için production ayarları

worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging Format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=3r/m;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Upstream Servers
    upstream backend {
        server backend:5000;
        keepalive 32;
    }

    upstream main_portal {
        server main-portal:80;
        keepalive 32;
    }

    upstream frontend_web {
        server frontend-web:80;
        keepalive 32;
    }

    upstream frontend_admin {
        server frontend-admin:80;
        keepalive 32;
    }

    upstream frontend_restaurant {
        server frontend-restaurant:80;
        keepalive 32;
    }

    upstream grafana {
        server grafana:3000;
        keepalive 32;
    }

    # HTTP to HTTPS Redirect
    server {
        listen 80;
        server_name kaptazeapp.com.tr www.kaptazeapp.com.tr api.kaptazeapp.com.tr admin.kaptazeapp.com.tr restoran.kaptazeapp.com.tr monitor.kaptazeapp.com.tr;
        
        # Let's Encrypt Challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # Redirect all HTTP to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # Main Website - kaptazeapp.com.tr
    server {
        listen 443 ssl http2;
        server_name kaptazeapp.com.tr www.kaptazeapp.com.tr;

        ssl_certificate /etc/nginx/ssl/live/kaptazeapp.com.tr/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/kaptazeapp.com.tr/privkey.pem;

        # Security Headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Root location
        location / {
            proxy_pass http://main_portal;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # Caching for static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                proxy_pass http://main_portal;
                proxy_set_header Host $host;
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }

        # Service Worker
        location /sw.js {
            proxy_pass http://main_portal;
            proxy_set_header Host $host;
            expires 0;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # Manifest
        location /manifest.json {
            proxy_pass http://main_portal;
            proxy_set_header Host $host;
            expires 1y;
            add_header Cache-Control "public";
        }
    }

    # API Server - api.kaptazeapp.com.tr
    server {
        listen 443 ssl http2;
        server_name api.kaptazeapp.com.tr;

        ssl_certificate /etc/nginx/ssl/live/kaptazeapp.com.tr/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/kaptazeapp.com.tr/privkey.pem;

        # API specific settings
        client_max_body_size 10M;

        location / {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;

            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # CORS Headers
            add_header Access-Control-Allow-Origin "https://kaptazeapp.com.tr" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
            add_header Access-Control-Allow-Credentials "true" always;

            # Handle preflight OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "https://kaptazeapp.com.tr";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type "text/plain charset=UTF-8";
                add_header Content-Length 0;
                return 204;
            }
        }

        # Special rate limiting for auth endpoints
        location ~ ^/api/(kullanici/giris|kullanici/kayit) {
            limit_req zone=login burst=5 nodelay;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # File uploads
        location /api/upload {
            client_max_body_size 50M;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Admin Panel - admin.kaptazeapp.com.tr
    server {
        listen 443 ssl http2;
        server_name admin.kaptazeapp.com.tr;

        ssl_certificate /etc/nginx/ssl/live/kaptazeapp.com.tr/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/kaptazeapp.com.tr/privkey.pem;

        # IP Whitelist for admin (optional)
        # allow 1.2.3.4;  # Office IP
        # deny all;

        location / {
            proxy_pass http://frontend_admin;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Static assets caching
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                proxy_pass http://frontend_admin;
                proxy_set_header Host $host;
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
    }

    # Restaurant Panel - restoran.kaptazeapp.com.tr
    server {
        listen 443 ssl http2;
        server_name restoran.kaptazeapp.com.tr;

        ssl_certificate /etc/nginx/ssl/live/kaptazeapp.com.tr/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/kaptazeapp.com.tr/privkey.pem;

        location / {
            proxy_pass http://frontend_restaurant;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Static assets caching
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                proxy_pass http://frontend_restaurant;
                proxy_set_header Host $host;
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
    }

    # Monitoring - monitor.kaptazeapp.com.tr
    server {
        listen 443 ssl http2;
        server_name monitor.kaptazeapp.com.tr;

        ssl_certificate /etc/nginx/ssl/live/kaptazeapp.com.tr/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/kaptazeapp.com.tr/privkey.pem;

        # Basic Auth for monitoring (optional)
        # auth_basic "Monitoring Area";
        # auth_basic_user_file /etc/nginx/.htpasswd;

        location / {
            proxy_pass http://grafana;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for Grafana live
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }

    # Health Check Endpoint
    server {
        listen 80;
        server_name localhost;
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}